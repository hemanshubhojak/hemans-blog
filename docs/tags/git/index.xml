<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on heman&#39;s blog</title>
    <link>https://hemans.blog/tags/git/</link>
    <description>Recent content in git on heman&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Nov 2018 00:17:00 +0000</lastBuildDate>
    
	<atom:link href="https://hemans.blog/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git: Import git repository</title>
      <link>https://hemans.blog/posts/2018/2018-11-22-import-git-repo/</link>
      <pubDate>Thu, 22 Nov 2018 00:17:00 +0000</pubDate>
      
      <guid>https://hemans.blog/posts/2018/2018-11-22-import-git-repo/</guid>
      <description>git clone --bare https://source-domain.com/source-repo.git git push --mirror https://destination-domain.com/destination-repo.git </description>
    </item>
    
    <item>
      <title>Git: Purge local branches missing on remote (Powershell)</title>
      <link>https://hemans.blog/posts/2018/2018-10-04-git-purge-local-branches-missing-on-remote-powershell/</link>
      <pubDate>Thu, 04 Oct 2018 04:13:00 +0000</pubDate>
      
      <guid>https://hemans.blog/posts/2018/2018-10-04-git-purge-local-branches-missing-on-remote-powershell/</guid>
      <description>git remote prune origin | git branch -vv | Select-String -Pattern &amp;#34;\[origin/(.*?): gone\]&amp;#34; | %{git branch -d $($_.matches.groups[1].value)} </description>
    </item>
    
    <item>
      <title>Git: Clean untracked files and directories</title>
      <link>https://hemans.blog/posts/2018/2018-05-18-git-clean-untracked-files-and-directories/</link>
      <pubDate>Fri, 18 May 2018 11:50:00 +0000</pubDate>
      
      <guid>https://hemans.blog/posts/2018/2018-05-18-git-clean-untracked-files-and-directories/</guid>
      <description>After a git pull I often have empty directories if files are moved around or deleted.
The following commit will clean all untracked files and directories.
git clean -fd </description>
    </item>
    
    <item>
      <title>Git: Undo a commit</title>
      <link>https://hemans.blog/posts/2018/2018-05-18-git-undo-commit/</link>
      <pubDate>Fri, 18 May 2018 11:47:00 +0000</pubDate>
      
      <guid>https://hemans.blog/posts/2018/2018-05-18-git-undo-commit/</guid>
      <description>git reset --hard HEAD~number_of_last_commits Or
git reset --hard commit_id If the commits are on the server
git push --force </description>
    </item>
    
    <item>
      <title>Git: Purge local branches missing on remote</title>
      <link>https://hemans.blog/posts/2018/2018-05-07-git-purge-local-branches-missing-on-remote/</link>
      <pubDate>Mon, 07 May 2018 12:20:00 +0000</pubDate>
      
      <guid>https://hemans.blog/posts/2018/2018-05-07-git-purge-local-branches-missing-on-remote/</guid>
      <description>Prune tracking branches not on remote
git remote prune origin List all local branches with upstream branch
git branch -vv Filter the branches with missing upstream
git branch -vv | grep &amp;#39;: gone]&amp;#39; Extract the branch names
git branch -vv | grep &amp;#39;: gone]&amp;#39; | awk &amp;#39;{print $1}&amp;#39; Delete the extracted branches
git branch -vv | grep &amp;#39;: gone]&amp;#39; | awk &amp;#39;{print $1}&amp;#39; | xargs git branch -d (Optional) Create an alias in bash</description>
    </item>
    
    <item>
      <title>Git: Revert a file to a previous version</title>
      <link>https://hemans.blog/posts/2016/2016-08-01-git-revert-file-to-previous-version/</link>
      <pubDate>Mon, 01 Aug 2016 22:53:00 +0000</pubDate>
      
      <guid>https://hemans.blog/posts/2016/2016-08-01-git-revert-file-to-previous-version/</guid>
      <description>Using commit hash
git log &amp;#34;some-folder/some-file.txt&amp;#34; #get the SHA commit hash git checkout &amp;lt;commit-hash&amp;gt; &amp;#34;some-folder/some-file.txt&amp;#34; Using the HEAD
git checkout HEAD~1 &amp;#34;some-folder/some-file.txt&amp;#34; </description>
    </item>
    
    <item>
      <title>Git: Create a remote branch</title>
      <link>https://hemans.blog/posts/2016/2016-07-20-git-create-a-remote-branch/</link>
      <pubDate>Wed, 20 Jul 2016 11:06:00 +0000</pubDate>
      
      <guid>https://hemans.blog/posts/2016/2016-07-20-git-create-a-remote-branch/</guid>
      <description>Create a local branch
git checkout -b feature/somefeature Push the local branch to the remote server and optionally set upstream with -u so that the subsequent git pull will know what to do.
git push -u origin feature/somefeature </description>
    </item>
    
  </channel>
</rss>